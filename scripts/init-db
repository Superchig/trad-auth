#!/usr/bin/env bash
set -x
set -eo pipefail

if ! [ -x "$(command -v psql)" ]; then
  >&2 echo 'Error: psql is not installed'
  exit 1
fi

if ! ([ -z "$TEST_DATABASE_URL" ] | [-z "$DATABASE_URL" ]); then
  >&2 echo 'Error: Env variables TEST_DATABASE_URL and DATABASE_URL are not defined'
  exit 1
fi

DB_USER=${POSTGRES_USER:=postgres}
DB_PASSWORD=${POSTGRES_PASSWORD:=password}
DB_NAME=${POSTGRES_DB:=trad-auth}
DB_PORT=${POSTGRES_PORT:=5432}

# Allow to skip Docker if a dockerized Postgres database is already running
if [ -z "${SKIP_DOCKER}" ]; then
  docker run \
    -e POSTGRES_USER=${DB_USER} \
    -e POSTGRES_PASSWORD=${DB_PASSWORD} \
    -e POSTGRES_DB=${DB_NAME} \
    -p "${DB_PORT}":5432 \
    -d postgres \
    postgres -N 1000
fi

# Keep pinging Postgres until it's ready to accept commands
export PGPASSWORD="${DB_PASSWORD}"
until psql -h 'localhost' -U "${DB_USER}" -p "${DB_PORT}" -d 'postgres' -c '\q'; do
  >&2 echo 'Postgres is still unavailable - sleeping'
  sleep 1
done

>&2 echo "Postgres is up and running on port ${DB_PORT}!"

>&2 echo 'Initializing development database...'

dbmate up

>&2 echo 'Initializing test database...'

dbmate -u "$TEST_DATABASE_URL" up
